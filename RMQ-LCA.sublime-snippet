<snippet>
    <content><![CDATA[
map<pair<int, int>, int> Weight;    // Initialize this !!
class LCA {
    int n, l;
    int timer;
    vi tin, tout;
    vvi up;
    vvi mx;

    void dfs(int v, int par, vvi& adj) {
        tin[v] = timer++;
        up[v][0] = par;
        mx[v][0] = Weight[{par, v}];
        for (int i = 1; i <= l; i++) {
            up[v][i] = up[up[v][i - 1]][i - 1];
            mx[v][i] = max(mx[v][i - 1], mx[up[v][i - 1]][i - 1]);
        }
        for (auto u : adj[v]) {
            if (u != par) {
                dfs(u, v, adj);
            }
        }
        tout[v] = timer++;
    }

public:
    LCA(vvi& adj, int root = 0) {
        n = adj.size();
        tin.resize(n);
        tout.resize(n);
        timer = 0;
        l = ceil(log2(n));
        up.assign(n, vi(l + 1));
        mx.assign(n, vi(l + 1));
        dfs(root, root, adj);
    }

    bool isAncestor(int u, int v) {
        return tin[u] <= tin[v] && tout[v] <= tout[u];
    }

    int lca(int u, int v) {
        assert(u >= 0 && u < n);
        assert(v >= 0 && v < n);
        if (isAncestor(u, v))
            return u;
        if (isAncestor(v, u))
            return v;
        for (int i = l; i >= 0; i--) {
            if (!isAncestor(up[u][i], v)) {
                u = up[u][i];
            }
        }
        return up[u][0];
    }

    int lgEdge(int u, int v) {
        int _l = lca(u, v);
        int lg = 0;
        for (int i = l; i >= 0; i--) {
            if (!isAncestor(up[u][i], _l)) {
                lg = max(lg, mx[u][i]);
                u = up[u][i];
            }
        }
        if (up[u][0] == _l) lg = max(lg, mx[u][0]);
        for (int i = l; i >= 0; i--) {
            if(!isAncestor(up[v][i], _l)) {
                lg = max(lg, mx[v][i]);
                v = up[v][i];
            }
        }
        if (up[v][0] == _l) lg = max(lg, mx[v][0]);
        return lg;
    }
};


]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>LCA-RMQ</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.c++</scope>
</snippet>
